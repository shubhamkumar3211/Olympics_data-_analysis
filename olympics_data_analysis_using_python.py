# -*- coding: utf-8 -*-
"""Olympics Data Analysis Using Python 2021.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nwxy3wbuNFuONVE5OF5WPA8CdJS7w45B

Data are collected from kaggle website and 
Import the relivent library
"""

import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

"""Load data set from csv file 

"""

athlete_oly=pd.read_csv("/content/athlete_events.csv")
regn=pd.read_csv("/content/noc_regions.csv")
athlete_oly.head()

"""Join the two databases from two csv files
for this i used merge function from pandas library
"""

athlete_df = athlete_oly.merge(regn,how="left",on="NOC")
athlete_df.head()

athlete_df.describe()

athlete_df.info()

"""Use **rename** function for name consistent"""

athlete_df.rename(columns={"region":"Region","notes":"Notes"},inplace=True)
athlete_df.head()

"""check null value in database"""

nan_val=athlete_df.isna()
nal_columns=nan_val.any()
nal_columns

athlete_df.isnull().sum() # to count the null value in each column

athlete_list=athlete_df.columns[athlete_df.isna().any()].to_list()
athlete_list

null_columns = [i for (i,j) in athlete_df.isnull().sum().items() if j!=0]
print(null_columns)

"""India details

"""

athlete_df.query('Team=="India"')

print(athlete_df["Team"])

x=np.array(athlete_df["Team"].unique())
print(len(x))

"""Top country in olympics

"""

top_10_country=athlete_df.Team.value_counts().sort_values(ascending=False).head(10)
top_10_country

"""plot for the top 10 country

"""

plt.figure(figsize=(12,6))
plt.title("Overall participant by country")
sns.barplot(x=top_10_country.index,y=top_10_country)

"""age distribution for participant

"""

plt.figure(figsize=(12,6))
plt.title("age distribution of athlete")
plt.xlabel("Age of athlete")
plt.ylabel("No of participants")
plt.hist(athlete_df.Age,bins=np.arange(10,80,2),color="blue",edgecolor="yellow");

"""sport happen in winter season

"""

winter_sports=athlete_df[athlete_df.Season=="Winter"].Sport.unique()
winter_sports

"""Female and male participant"""

gender_counts= athlete_df.Sex.value_counts()
gender_counts

"""pie plot for gender distribution"""

plt.figure(figsize=(12,6))
plt.title("Gender distribution")
plt.pie(gender_counts,labels=gender_counts.index,startangle=90,shadow=True,explode=[0,0],autopct="%f%%")

#Total no of medals
athlete_df.Medal.value_counts()

"""Total number of female participant in each olympics

"""

female_participants=athlete_df[(athlete_df.Sex=="F") & (athlete_df.Season=="Summer")][["Sex","Year"]]
female_participants=female_participants.groupby("Year").count().reset_index()
female_participants.tail()

women_oly=athlete_df[(athlete_df.Sex=="F") & (athlete_df.Season=="Summer")]
 plt.figure(figsize=(20,10))
 plt.title("Women Participant")
 sns.countplot(x="Year",data=women_oly)

part = women_oly.groupby("Year")["Sex"].value_counts()
part
plt.figure(figsize=(21,10))
plt.title("plot of female athlete over time")
part.plot()

#gold medal participant
gold_medal=athlete_df[(athlete_df.Medal=="Gold")]
gold_medal.head()

"""Number and Name of athlete who win gold medal at age of 60"""

#women_oly=athlete_df[(athlete_df.Medal=="Gold") & (athlete_df.Season=="Summer")]
 #women_oly

 plt.figure(figsize=(20,10))
 plt.title("Country participant ")
 sns.countplot(x="Year",data=athlete_df)